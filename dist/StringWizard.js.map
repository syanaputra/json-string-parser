{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/StringWizard.js"],"names":["StringWizard","text","rules","additionalConfig","stringLogic","split","input","rule","result","value","join","Array","isArray","console","error","trim","execRule","original","map","item","appendtext","prependtext","replacetext","search","replacement","replace","applyRule","type","func","forEach","log","module","exports","define","window"],"mappings":"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","file":"StringWizard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2019 Stephanus Yanaputra.\n  Licensed under the MIT License (MIT), see\n  http://syanaputra.github.io/string-wizard\n*/\n/* global define */\n(function () {\n    'use strict';\n\n    const StringWizard = (text, rules = [], additionalConfig) => {\n        let stringLogic = {\n            split: (input, rule) => {\n                let result = input;\n                if(typeof(rule.value) != 'undefined') {\n                    result = input.split(rule.value);\n                }\n\n                return result;\n            },\n            join: (input, rule) => {\n                let result = input;\n\n                if(Array.isArray(input)) {\n                    if(typeof(rule.value) != 'undefined') {\n                        result = input.join(rule.value);\n                    }\n                }\n                else {\n                    console.error('join - Error: Input has to be an array');\n                }\n\n                return result;\n            },\n            trim: (input, rule) => {\n                let result = input;\n\n                const execRule = (original) => original.trim();\n\n                if(Array.isArray(input)) {\n                    result = input.map(function (item) { return execRule(item); });\n                }\n                else {\n                    result = execRule(input);\n                }\n\n                return result;\n            },\n            appendtext: (input, rule) => {\n                let result = input;\n\n                const execRule = (original, value) => original + value;\n\n                if(Array.isArray(input)) {\n                    result = input.map(function (item) { return execRule(item, rule.value); });\n                }\n                else {\n                    result = execRule(input, rule.value);\n                }\n\n                return result;\n            },\n            prependtext: (input, rule) => {\n                let result = input;\n\n                const execRule = (original, value) => value + original;\n\n                if(Array.isArray(input)) {\n                    result = input.map(function (item) { return execRule(item, rule.value); });\n                }\n                else {\n                    result = execRule(input, rule.value);\n                }\n\n                return result;\n            },\n            replacetext: (input, rule) => {\n                let result = input;\n\n                const execRule = (original, search, replacement) => original.replace(search, replacement);\n\n                if(Array.isArray(input)) {\n                    result = input.map(function (item) { return execRule(item, rule.value); });\n                }\n                else {\n                    result = execRule(input, rule.value);\n                }\n\n                return result;\n            },\n            // ...additionalConfig.stringLogic,\n        };\n\n        const applyRule = (result, rule) => {\n            if(typeof(rule.type) != 'undefined' && stringLogic[rule.type] != 'undefined') {\n                let func = stringLogic[rule.type];\n\n                return func(result, rule);\n            }\n\n            return result;\n        };\n\n        let result = text;\n        rules.forEach((rule) => {\n            console.log(result);\n            result = applyRule(result, rule);\n        });\n\n        return result;\n    };\n\n    // class StringWizard {\n    //     constructor(rules = []) {\n    //         this.rules = rules || [];\n    //     }\n    //\n    //     addRule(rule) {\n    //         if(typeof(this.rules) == 'undefined') {\n    //             this.rules = [];\n    //         }\n    //\n    //         this.rules.push(rule);\n    //     }\n    //\n    //     addRules(rules = []) {\n    //         var addRule = this.addRule;\n    //\n    //         if(rules && rules.length > 0) {\n    //             console.error(rules);\n    //             rules.map(function (rule) {\n    //                 // console.error(rule);\n    //                 addRule(rule);\n    //             });\n    //         }\n    //     }\n    //\n    //     applyRule(input, rule) {\n    //         var result = input;\n    //         var conditions = typeof(rule.conditions) != 'undefined' ? rule.conditions : [];\n    //\n    //         switch(rule.type.toLowerCase()) {\n    //             case 'split':\n    //                 if(typeof(rule.value) != 'undefined') {\n    //                     result = input.split(rule.value);\n    //                 }\n    //                 break;\n    //\n    //             case 'join':\n    //                 if(Array.isArray(input)) {\n    //                     if(typeof(rule.value) != 'undefined') {\n    //                         result = input.join(rule.value);\n    //                     }\n    //                 }\n    //                 else {\n    //                     console.error('join - Error: Input has to be an array');\n    //                 }\n    //                 break;\n    //\n    //             case 'trim':\n    //\n    //                 var execRule = function(original) {\n    //                     return original.trim();\n    //                 };\n    //\n    //                 if(Array.isArray(input)) {\n    //                     result = input.map(function (item) { return execRule(item); });\n    //                 }\n    //                 else {\n    //                     result = execRule(input);\n    //                 }\n    //\n    //                 break;\n    //\n    //             case 'appendtext':\n    //                 if(typeof(rule.value) != 'undefined') {\n    //\n    //                     var execRule = function(original, value) {\n    //                         return original + value;\n    //                     };\n    //\n    //                     if(Array.isArray(input)) {\n    //                         result = input.map(function (item) { return execRule(item, rule.value); });\n    //                     }\n    //                     else {\n    //                         result = execRule(input, rule.value);\n    //                     }\n    //                 }\n    //\n    //                 break;\n    //\n    //             case 'prependtext':\n    //                 if(typeof(rule.value) != 'undefined') {\n    //\n    //                     var execRule = function(original, value) {\n    //                         return value + original;\n    //                     };\n    //\n    //                     if(Array.isArray(input)) {\n    //                         result = input.map(function (item) { return execRule(item, rule.value); });\n    //                     }\n    //                     else {\n    //                         result = execRule(input, rule.value);\n    //                     }\n    //\n    //                 }\n    //\n    //                 break;\n    //\n    //             case 'replacetext':\n    //                 if(typeof(rule.search) != 'undefined') {\n    //\n    //                     var execRule = function(original, search, replacement) {\n    //                         return original.replace(search, replacement);\n    //                     };\n    //\n    //                     if(Array.isArray(input)) {\n    //                         result = input.map(function (item) { return execRule(item, rule.search, rule.replacement || ''); });\n    //                     }\n    //                     else {\n    //                         result = execRule(input, rule.search, rule.replacement || '');\n    //                     }\n    //\n    //                 }\n    //\n    //                 break;\n    //         }\n    //\n    //         return result;\n    //     }\n    //\n    //     build(input) {\n    //         var result = input;\n    //         var applyRule = this.applyRule;\n    //\n    //         if(typeof(result) == 'undefined') {\n    //             console.error('Input is undefined');\n    //         }\n    //\n    //         this.rules.map(function(rule) {\n    //             result = applyRule(result, rule);\n    //         });\n    //\n    //         return result;\n    //     }\n    //\n    // }\n\n    if (typeof module !== 'undefined' && module.exports) {\n        StringWizard.default = StringWizard;\n        module.exports = StringWizard;\n    } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n        // register as 'classnames', consistent with npm package name\n        define('StringWizard', [], function () {\n            return StringWizard;\n        });\n    } else {\n        window.StringWizard = StringWizard;\n    }\n}());\n"],"sourceRoot":""}